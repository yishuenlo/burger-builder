{"version":3,"sources":["scenes/BurgerBuilder/BurgerBuilder.module.css","scenes/components/SelectionControls/Control/Control.module.css","scenes/components/SelectionControls/SelectionControls.module.css","scenes/components/Burger/Burger.module.css","components/Layout/Layout.module.css","scenes/components/Burger/Ingredient/Ingredient.module.css","assets/burger-shadow.svg","assets/ingredients-icon sync /^/.*/.svg$","assets/ingredients-icon/bacon.svg","assets/ingredients-icon/cheese.svg","assets/ingredients-icon/egg.svg","assets/ingredients-icon/lettuce.svg","assets/ingredients-icon/onion.svg","assets/ingredients-icon/pickle.svg","assets/ingredients-icon/protein.svg","assets/ingredients-icon/tomato.svg","components/Layout/Layout.js","scenes/components/Burger/Ingredient/Ingredient.js","scenes/components/Burger/Burger.js","scenes/components/SelectionControls/Control/Control.js","scenes/components/SelectionControls/SelectionControls.js","scenes/BurgerBuilder/BurgerBuilder.js","container/App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","layout","children","className","classes","Content","Ingredient","type","src","BurgerIngredients","prototype","PropTypes","string","Burger","ingredients","displayIngredients","ingredientKey","Array","_","i","key","flat","length","style","margin","WholeBurger","Shadow","shadow","Control","label","quantity","adjustIngredients","disabledAdd","disabledRemove","price","Selection","onClick","disabled","require","Label","PriceTag","SelectionControls","totalIngredients","adjustIngredientHandler","totalPrice","displayControls","warningMessage","Warning","TotalPrice","toFixed","SelectionContainer","INGREDIENT_PRICES","lettuce","onion","pickle","tomato","egg","bacon","cheese","protein","BurgerBuilder","state","purchasable","checkIngredientsQuant","updatedDisabledAdd","updatedDisabledRemove","values","reduce","sum","cur","setState","action","updatedIngredients","prevCount","updatedCount","prevPrice","updatedPrice","TitleContainer","SubTitle","Title","Description","this","a","b","Component","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a6dea8a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BurgerBuilder\":\"BurgerBuilder_BurgerBuilder__1cJs0\",\"Burger\":\"BurgerBuilder_Burger__1S3mK\",\"TitleContainer\":\"BurgerBuilder_TitleContainer__1wXw_\",\"SelectionControls\":\"BurgerBuilder_SelectionControls__2bUub\",\"Title\":\"BurgerBuilder_Title__C0ydz\",\"tada\":\"BurgerBuilder_tada__2rxwk\",\"SubTitle\":\"BurgerBuilder_SubTitle__3HkzW\",\"Description\":\"BurgerBuilder_Description__2KlmP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Control\":\"Control_Control__1H1VO\",\"Selection\":\"Control_Selection__rJflz\",\"PriceTag\":\"Control_PriceTag__wI4s_\",\"Label\":\"Control_Label__3e0Rs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectionControls\":\"SelectionControls_SelectionControls__3QVek\",\"TotalPrice\":\"SelectionControls_TotalPrice__1R9Kw\",\"SelectionContainer\":\"SelectionControls_SelectionContainer__FEwMH\",\"Warning\":\"SelectionControls_Warning__141aI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__tIaG0\",\"pulse\":\"Burger_pulse__3wzuc\",\"WholeBurger\":\"Burger_WholeBurger__1foLS\",\"Shadow\":\"Burger_Shadow__1QwLw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3iKlb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BurgerIngredients\":\"Ingredient_BurgerIngredients__1KEoA\"};","module.exports = __webpack_public_path__ + \"static/media/burger-shadow.0fc37243.svg\";","var map = {\n\t\"./bacon.svg\": 26,\n\t\"./cheese.svg\": 27,\n\t\"./egg.svg\": 28,\n\t\"./lettuce.svg\": 29,\n\t\"./onion.svg\": 30,\n\t\"./pickle.svg\": 31,\n\t\"./protein.svg\": 32,\n\t\"./tomato.svg\": 33\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25;","module.exports = __webpack_public_path__ + \"static/media/bacon.ab5dc788.svg\";","module.exports = __webpack_public_path__ + \"static/media/cheese.db4301d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/egg.960982b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/lettuce.4e007865.svg\";","module.exports = __webpack_public_path__ + \"static/media/onion.d7085dfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/pickle.c07ce958.svg\";","module.exports = __webpack_public_path__ + \"static/media/protein.b7c51adc.svg\";","module.exports = __webpack_public_path__ + \"static/media/tomato.c90c7169.svg\";","import React, { Fragment } from 'react';\r\nimport classes from './Layout.module.css';\r\n\r\nconst layout = ({ children }) => (\r\n  <Fragment>\r\n    <div>Toolbar, Sidebar, Backdrop</div>\r\n    <main className={classes.Content}>{children}</main>\r\n  </Fragment>\r\n);\r\n\r\nexport default layout;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport classes from \"./Ingredient.module.css\";\r\n\r\n//rendering ingredients in Burger using CSS\r\nconst Ingredient = ({ type }) => {\r\n  return (\r\n    <img\r\n      src={`https://raw.githubusercontent.com/yishuenlo/burger-bulider/design/src/assets/burger-ingredients/${type}.svg`}\r\n      className={classes.BurgerIngredients}\r\n    />\r\n  );\r\n};\r\n\r\nIngredient.prototype = {\r\n    type: PropTypes.string\r\n}\r\n\r\nexport default Ingredient;\r\n","import React from \"react\";\r\nimport Ingredient from \"./Ingredient/Ingredient\";\r\nimport classes from \"./Burger.module.css\";\r\nimport shadow from \"../../../assets/burger-shadow.svg\";\r\n\r\nconst Burger = ({ ingredients }) => {\r\n  //parse and populate ingredients\r\n  let displayIngredients = Object.keys(ingredients)\r\n    .map((ingredientKey) => {\r\n      //create an array with empty elements, with length based on object value\r\n      return [...Array(ingredients[ingredientKey])].map((_, i) => (\r\n        <Ingredient key={ingredientKey + i} type={ingredientKey} />\r\n      ));\r\n    })\r\n    .flat(); //flatten array\r\n\r\n  if (displayIngredients.length === 0)\r\n    displayIngredients = <p style={{margin: '3em 0'}}>Please start adding ingredients</p>;\r\n\r\n  return (\r\n    <div className={classes.WholeBurger}>\r\n      <div className={classes.Burger}>\r\n        <Ingredient type=\"bread-top\" />\r\n        {displayIngredients}\r\n        <Ingredient type=\"bread-bottom\" />\r\n      </div>\r\n      <img className={classes.Shadow} src={shadow}></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport classes from \"./Control.module.css\";\r\n\r\nconst Control = ({\r\n  label,\r\n  quantity,\r\n  adjustIngredients,\r\n  disabledAdd,\r\n  disabledRemove,\r\n  price\r\n}) => (\r\n  <div className={classes.Control}>\r\n    <div className={classes.Selection}>\r\n      <button\r\n        onClick={() => adjustIngredients(label, \"remove\")}\r\n        disabled={disabledRemove}\r\n      >\r\n        -\r\n      </button>\r\n      <p>{quantity}</p>\r\n      <button\r\n        onClick={() => adjustIngredients(label, \"add\")}\r\n        disabled={disabledAdd}\r\n      >\r\n        +\r\n      </button>\r\n    </div>\r\n    <img\r\n      src={require(`../../../../assets/ingredients-icon/${label}.svg`)}\r\n    ></img>\r\n    <p className={classes.Label}>{label}</p>\r\n    <p className={classes.PriceTag}>+${price[label]}</p>\r\n  </div>\r\n);\r\n\r\nexport default Control;\r\n","import React from \"react\";\r\nimport Control from \"./Control/Control\";\r\nimport classes from \"./SelectionControls.module.css\";\r\n\r\nconst SelectionControls = ({\r\n  ingredients,\r\n  totalIngredients,\r\n  adjustIngredientHandler,\r\n  disabledAdd,\r\n  disabledRemove,\r\n  totalPrice,\r\n  price\r\n}) => {\r\n\r\n  //loop through ingredients to create individual control\r\n  const displayControls = Object.keys(ingredients).map((ingredientKey) => (\r\n    <Control\r\n      key={ingredientKey}\r\n      label={ingredientKey}\r\n      quantity={ingredients[ingredientKey]}\r\n      adjustIngredients={adjustIngredientHandler}\r\n      disabledAdd={disabledAdd[ingredientKey]}\r\n      disabledRemove={disabledRemove[ingredientKey]}\r\n      price={price}\r\n    />\r\n  ));\r\n\r\n  const warningMessage =\r\n    totalIngredients >= 10 ? (\r\n      <p className={classes.Warning}>You've reached your total ingredient limit.</p>\r\n    ) : null;\r\n\r\n  return (\r\n    <div className={classes.SelectionControls}>\r\n      <h2 className={classes.TotalPrice}>${totalPrice.toFixed(2)}</h2>\r\n      <p>Total Ingredients Used: {totalIngredients}/10</p>\r\n      {warningMessage}\r\n      <div className={classes.SelectionContainer}>{displayControls}</div>\r\n      <button>Reset</button>\r\n      <button>Order Now</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectionControls;\r\n","import React, { Component } from \"react\";\r\nimport Burger from \"../components/Burger/Burger\";\r\nimport SelectionControls from \"../components/SelectionControls/SelectionControls\";\r\nimport classes from \"./BurgerBuilder.module.css\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n  lettuce: 0.25,\r\n  onion: 0.25,\r\n  pickle: 0.75,\r\n  tomato: 0.5,\r\n  egg: 0.75,\r\n  bacon: 0.75,\r\n  cheese: 0.5,\r\n  protein: 3.75,\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingredients: {\r\n      lettuce: 1,\r\n      onion: 1,\r\n      pickle: 1,\r\n      tomato: 1,\r\n      egg: 1,\r\n      bacon: 1,\r\n      cheese: 1,\r\n      protein: 1,\r\n    },\r\n    disabledAdd: {\r\n      lettuce: false,\r\n      cheese: false,\r\n      bacon: false,\r\n      protein: false,\r\n    },\r\n    disabledRemove: {\r\n      lettuce: false,\r\n      cheese: false,\r\n      bacon: false,\r\n      protein: false,\r\n    },\r\n    purchasable: false,\r\n    totalPrice: 16.8,\r\n  };\r\n\r\n  //disabled buttons based on ingredient quantities\r\n  checkIngredientsQuant = (ingredients) => {\r\n    const updatedDisabledAdd = { ...this.state.disabledAdd };\r\n    const updatedDisabledRemove = { ...this.state.disabledRemove };\r\n\r\n    //set total ingredients to limit of 10\r\n    const totalIngredients = Object.values(ingredients).reduce(\r\n      (sum, cur) => sum + cur\r\n    );\r\n\r\n    for (let key in ingredients) {\r\n      //if more than 2 for each ingredient, disable add button OR\r\n      //if more than 10, disable ALL add buttons\r\n      updatedDisabledAdd[key] = ingredients[key] > 1 || totalIngredients >= 10;\r\n      updatedDisabledRemove[key] = ingredients[key] <= 0;\r\n    }\r\n    this.setState({\r\n      disabledAdd: updatedDisabledAdd,\r\n      disabledRemove: updatedDisabledRemove,\r\n    });\r\n  };\r\n\r\n  adjustIngredientHandler = (type, action) => {\r\n    //create copy of original ingredient obj\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients,\r\n    };\r\n\r\n    //update quantity count\r\n    const prevCount = this.state.ingredients[type];\r\n    const updatedCount =\r\n      action === \"add\"\r\n        ? prevCount + 1\r\n        : prevCount > 0\r\n        ? prevCount - 1\r\n        : prevCount;\r\n    updatedIngredients[type] = updatedCount;\r\n\r\n    //update price\r\n    const prevPrice = this.state.totalPrice;\r\n    const updatedPrice =\r\n      action === \"add\"\r\n        ? prevPrice + INGREDIENT_PRICES[type]\r\n        : prevCount > 0\r\n        ? prevPrice - INGREDIENT_PRICES[type]\r\n        : prevPrice;\r\n\r\n    this.checkIngredientsQuant(updatedIngredients);\r\n\r\n    //update state\r\n    this.setState({\r\n      ingredients: updatedIngredients,\r\n      totalPrice: updatedPrice,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <article className={classes.BurgerBuilder}>\r\n        <div className={classes.TitleContainer}>\r\n          <div>\r\n            <p className={classes.SubTitle}>React</p>\r\n            <h2 className={classes.Title}>Mystery Burger</h2>\r\n            <p className={classes.Description}>\r\n              With Delicious Ancient Secret Sauce\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className={classes.Burger}>\r\n          <Burger ingredients={this.state.ingredients} />\r\n        </div>\r\n\r\n        <div className={classes.SelectionControls}>\r\n          <SelectionControls\r\n            totalPrice={this.state.totalPrice}\r\n            ingredients={this.state.ingredients}\r\n            totalIngredients={Object.values(this.state.ingredients).reduce(\r\n              (a, b) => a + b\r\n            )}\r\n            adjustIngredientHandler={this.adjustIngredientHandler}\r\n            disabledAdd={this.state.disabledAdd}\r\n            disabledRemove={this.state.disabledRemove}\r\n            price={INGREDIENT_PRICES}\r\n          />\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React from \"react\";\r\nimport Layout from \"../components/Layout/Layout\";\r\nimport BurgerBuilder from \"../scenes/BurgerBuilder/BurgerBuilder\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n        <BurgerBuilder />\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './container/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}